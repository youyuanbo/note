 git安装与使用
 
 一、安装git
 二、git全局参数配置
	1、设置开发者用户名
		git config --global user.name 'youyuanbo'
	2、设置邮箱信息
		git config --global user.email '1047795132@qq.com'
	3、取得全部信息
		git config --list
		git config -list

三、创建仓库
	1、新建目录
		md E:\development_jar\gitRepository
	2、进入仓库目录
		cd E:\development_jar\gitRepository
	3、初始化仓库
		第一种：在当前目录下新建一个隐藏文件夹，作为仓库目录
			git init
		
		第二种：将当前目录设置为仓库目录
			git init --bare
四、仓库的基本操作
	1、观察当前仓库状态
		git status
	2、将文件添加到暂存区
		git add 文件名称
	3、将文件提交到版本库中
		git commit -m "注释信息"
		git commit -m "Create a new file whose name is Hello.java"
	4、批量添加新文件到暂存区中
		git add .
	5、直接将文件添加到版本库中
		git commit -a -m "Change File XXX"
	
五、修改仓库文件
	1、比价文件
		git diff FileName
		"+"表示添加的代码；"-"	表示删除的代码
	2、查看某问价的提交历史
		git log FileName
		每一次提交都会自动生成一个commitID（在进行项目版本恢复的时候使用）
		
六、工作区、暂存区、版本库（仓库）
	在整个git之中，对文件的操作一共有三个区域：
		工作区（用户所编写的代码文件夹）：所有的文件操作都以工作区为主
		git仓库：
			暂存区：将工作区未保存的文件保存在暂存区中，此部分由git维护
			版本区：是真正进行项目发布的代码
	项目流程：
		1、首先，用户需要在工作区编写代码。在工作区进行的文件修改、删除都不会影响最终的软件版本。
		2、将文件添加到暂存区，此时并没有发布到版本库中，可以销毁文件。使用”git add“命令后，新文件将覆盖原来在暂存区中的问价
		3、使用”git commit“命令，将保存在暂存区中的文件提交到版本库中。由于一个项目可能会被多次发布，所以git会自动生成一个版本编号（CommitID），用户处理后期的回退。
	
七、版本穿越
	查看所有日志
		git log 
	查看某文件的日志信息
		git log FileName
	格式化日志信息
		git log --pretty=oneline
	
八、撤销修改
	1、修改文件后，没有提交到暂存区（未add,未commit）
		git checkout FileName
	2、修改文件后，已经提交到暂存区，没有提交到版本库（已经add，未commit）
		git reset HEAD FileName
		git checkout FileName
	区域变换：
		工作区——》暂存区：git add
		暂存区——》版本库（Master分支）：git commit
		暂存区——》工作区：git reset HEAD FileName

九、文件删除
	删除文件：使用此命令只是删除了工作区中的命令，在Master分支中，依然存在
		del FileName
	提交到版本库：
		git commit -a -m "Delete FileName"
	恢复文件（已经删除了Master分支上的文件）：
		git reset --hard 编码
	恢复文件（只是删除了工作区内的文件）：
		git checkout FileName
	
		
	
		
	